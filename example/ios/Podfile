require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '12.4'
install! 'cocoapods', :deterministic_uuids => false

ENV['RCT_NEW_ARCH_ENABLED'] = '0'

target 'SkyflowReactNativeExample' do
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => true,
    :fabric_enabled => flags[:fabric_enabled],
#    :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  # use_flipper!()
  
  def __apply_Xcode_15_post_install_workaround(installer)
    # This is a workaround for Xcode 15, see: https://github.com/facebook/react-native/issues/37748.
    puts "Applying Xcode 15 post install workaround"
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION']
      end
    end
  end

  post_install do |installer|
    react_native_post_install(installer)
    __apply_Xcode_15_post_install_workaround(installer)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end
